input { 
    stdin { 
        type => 'test' 
    } 
    tcp {
        type => "beer"
        port => 3333
    }
    tcp {
        type => "classic"
        port => 3334
    }
    tcp {
        type => "bit_server"
        port => 3335
    }
    tcp {
        type => "data_server"
        port => 3336
    }
}
filter {
    grok {
        type => "beer"
        match => ["@message", "%{COMBINDEDWITHRESPTIME}"]
        add_tag => ["http"]
    }
    grok {
        type => "classic"
        match => ["@message", "%{COMBINEDWITHCOOKIE}"]
        add_tag => ["http"]
    }
    grok {
        type => "bit_server"
        match => ["@message", "%{ADSBITSERVER}"]
        add_tag => ["ads"]
    }
    grok {
        type => "data_server"
        match => ["@message", "%{ADSDATASERVER}"]
        add_tag => ["ads"]
    }
    urldecode {
        tags => ["http"]
        all_fields => true
    }
    date {
        tags => ["http"]
        match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    mutate {
        tags => ["ads"]
        gsub => [
            "logdate", "\b(?<val>\d)\b", "0\k<val>",
            "logdate", "\s+", " "
        ]
    }
    date {
        tags => ["ads"]
        match => [ "logdate", "yyyy MM dd HH mm ss" ]
    }
    mutate {
        tags => ["http"]
        gsub => [
            "referrer", "\"", "",
            "cookie", "\"", "",
            "agent", "\"", "",
            "proxy", "\"", ""
        ]
    }
    kv {
        tags => ["http"]
        source => ["qstring"]
        target => "params"
        field_split => "?&"
        value_split => "="
    }
    kv {
        tags => ["http"]
        source => ["cookie"]
        target => "cookie_vals"
        field_split => "; "
        value_split => "="
    }
    grep {
        tags => ["http"]
        match => ["path", "/api/"]
        drop => false
        add_tag => ["api"]
    }
}
output { stdout { debug => true }}
